@inject SignInManager<ApplicationUser> SignInManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}

<li class="nav-item">
    
    <a class="nav-link text-yellow @ManageNavPages.IndexNavClass(ViewContext)" id="profile" asp-page="./Index"><i class="fa fa-user fa-nav"></i>Profile</a>
</li>
<li class="nav-item">
   
    <a class="nav-link text-yellow @ManageNavPages.EmailNavClass(ViewContext)" id="email" asp-page="./Email"><i class="fa fa-envelope fa-nav"></i> Email</a>
</li>
<li class="nav-item">
   
    <a class="nav-link text-yellow @ManageNavPages.ChangePasswordNavClass(ViewContext)" id="change-password" asp-page="./ChangePassword"><i class="fa fa-lock fa-nav text-yellow"></i> Password</a>
</li>
@if (hasExternalLogins)
{
    <li id="external-logins" class="nav-item">
       
        <a id="external-login" class="nav-link text-yellow @ManageNavPages.ExternalLoginsNavClass(ViewContext)" asp-page="./ExternalLogins"> <i class="fa fa-lock fa-nav"></i> External logins</a>
    </li>
}
<li class="nav-item">
   
    <a class="nav-link text-yellow @ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)" id="two-factor" asp-page="./TwoFactorAuthentication"><i class="fa fa-key fa-nav"></i> 2FA Authentication</a>
</li>
<li class="nav-item">
   
    <a class="nav-link  text-yellow @ManageNavPages.PersonalDataNavClass(ViewContext)" id="personal-data" asp-page="./PersonalData"><i class="fa fa-download fa-nav"></i> Personal data</a>
</li>