@page
@using chickadee.Data
@using Duende.IdentityServer.Extensions
@model VerifyAccountModel
@inject ApplicationDbContext DbContext;
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Verify Account";
    ViewData["ActivePage"] = ManageNavPages.VerifyAccount;

}

<svg xmlns="http://www.w3.org/2000/svg" style="display: none;">
    <symbol id="check-circle-fill" viewBox="0 0 16 16">
        <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z"/>
    </symbol>
    <symbol id="info-fill" viewBox="0 0 16 16">
        <path d="M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm.93-9.412-1 4.705c-.07.34.029.533.304.533.194 0 .487-.07.686-.246l-.088.416c-.287.346-.92.598-1.465.598-.703 0-1.002-.422-.808-1.319l.738-3.468c.064-.293.006-.399-.287-.47l-.451-.081.082-.381 2.29-.287zM8 5.5a1 1 0 1 1 0-2 1 1 0 0 1 0 2z"/>
    </symbol>
    <symbol id="exclamation-triangle-fill" viewBox="0 0 16 16">
        <path d="M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z"/>
    </symbol>
</svg>
<partial name="_StatusMessage" for="StatusMessage"/>
<div asp-validation-summary="ModelOnly" class="text-danger"></div>

<div class="col-lg-9 mb-5">

    <h3 class="lead">Verify Account</h3>
    @{
        try
        {
            if (DbContext.Tenant != null)
            {
                Tenant tenant = (DbContext.Tenant.First(t => t.Id == User.GetSubjectId()));
            
                if (tenant.IsIdVerified)
                {
                    <div class="alert alert-success d-flex align-items-center" role="alert">
                        <svg class="bi flex-shrink-0 me-2" width="16" height="16" role="img" aria-label="Success:">
                            <use xlink:href="#check-circle-fill"/>
                        </svg>
                        <div>
                            Your account has been verified!
                        </div>
                    </div>
                }
                else {if (!tenant.IsIdVerified)
                {
                    <div class="alert alert-danger d-flex align-items-center" role="alert">
                        <svg class="bi flex-shrink-0 me-2" width="16" height="16" role="img" aria-label="Success:">
                            <use xlink:href="#exclamation-triangle-fill"/>
                        </svg>
                        <div>
                            Verification Pending
                        </div>
                    </div>
                }
                }
            }
        }
        catch
        {
            Console.WriteLine("Failed to get tenant");
        }
    }
    <hr/>
    <form id="profile-form" method="post" enctype="multipart/form-data">
        <div class="col">
            <div class="row">
                <div class="col my-3">
                    <h3 class="subheadingFont">Property</h3>
                    <p>Please select your address</p>
                    @Html.DropDownList("properties", @ViewBag.properties as List<SelectListItem>, new { @class="form-control" })
                </div>
                <div class="col my-3">
                    <h3 class="subheadingFont">Unit</h3>
                    <p>Please select your unit</p>
                   <select asp-for="@Model.UnitId" id="units" class="form-control">
                       <option selected></option>
                   </select>
                </div>
            </div>
            <div class="col-auto my-5">
                <h3 class="subheadingFont">Photo ID</h3>
                <p>Please upload a copy of your legal ID for verification</p>
                @if (Model.InputPhotoId.Data.IsNullOrEmpty())
                {
                    <input type="file" name="IdPhoto"
                           accept=".png,.jpg,.jpeg,.gif,.tif"
                           asp-for="InputPhotoId.Data"
                           class="form-control border-dashed w-100"
                           id="InputPhotoId.Data"
                           placeholder="Upload ID"
                           onchange="document.getElementById('IdPhoto').src = window.URL.createObjectURL(this.files[0]); document.getElementById('IdPhoto').classList.remove('d-none')"/>
                    <img id="IdPhoto" class="img-fluid my-3 dropzone d-none" width="300" height="300" src="" alt="Id Photo">
                }
                else
                {
                    <input type="file" name="IdPhoto"
                           accept=".png,.jpg,.jpeg,.gif,.tif"
                           asp-for="InputPhotoId.Data"
                           class="form-control border-dashed w-100"
                           id="InputPhotoId.Data"
                           placeholder="Upload ID"
                           onchange="document.getElementById('IdPhoto').src = window.URL.createObjectURL(this.files[0]); document.getElementById('IdPhoto').classList.remove('d-none')"/>

                    <img id="IdPhoto" class="img-fluid my-3 dropzone d-block-inline" width="300" height="300" src="data:image/*;base64,@(Convert.ToBase64String(Model.InputPhotoId.Data!))" alt="Id Photo">
                    @if (!@Model.InputPhotoId.ResponseMessage.IsNullOrEmpty())
                    {
                        <p class="text-danger textFont">Rejection Reason: @Model.InputPhotoId.ResponseMessage</p>
                    }
                }

            </div>
            <div class="col-auto my-3">
                <h3 class="subheadingFont">Lease Agreement</h3>

                @if (Model.InputLeaseAgreement != null && Model.InputLeaseAgreement.Data.IsNullOrEmpty())
                {
                    <input type="file" name="leasePhoto"
                           accept=".png,.jpg,.jpeg,.gif,.tif"
                           asp-for="InputLeaseAgreement.Data"
                           class="form-control border-dashed w-100"
                           id="InputLeaseAgreement.Data"
                           placeholder="Upload ID"
                           onchange="document.getElementById('leasePhoto').src = window.URL.createObjectURL(this.files[0]); document.getElementById('leasePhoto').classList.remove('d-none')"/>
                    <img id="leasePhoto" class="img-fluid my-3 dropzone d-none" width="300" height="300" src="" alt="Lease Photo">
                }
                else
                {
                    <input type="file" name="leasePhoto"
                           accept=".png,.jpg,.jpeg,.gif,.tif"
                           asp-for="InputLeaseAgreement.Data"
                           class="form-control border-dashed w-100"
                           id="InputLeaseAgreement.Data"
                           placeholder="Upload ID"
                           onchange="document.getElementById('leasePhoto').src = window.URL.createObjectURL(this.files[0]); document.getElementById('leasePhoto').classList.remove('d-none')"/>

                    <img id="leasePhoto" class="img-fluid my-3 dropzone d-block-inline" width="300" height="300" src="data:image/*;base64,@(Convert.ToBase64String(Model.InputLeaseAgreement!.Data!))" alt="Lease Photo">
                    @if (!@Model.InputPhotoId.ResponseMessage.IsNullOrEmpty())
                    {
                        <p class="text-danger textFont">Rejection Reason: @Model.InputLeaseAgreement.ResponseMessage</p>
                    }
                }
            </div>
        </div>
        <button id="update-profile-button" type="submit" class="btn btn-green mt-3 float-end">Submit</button>
    </form>
</div>

@{
    <script>
    var unitId = "";
    document.getElementById("update-profile-button").classList.add("disabled")

    var activities = document.getElementById("properties");
    var propertiesDropDown = document.getElementById("properties"); 
    var unitsDropDown = document.getElementById("units"); 
   
    activities.addEventListener("change", function() {
    var str = propertiesDropDown.options[propertiesDropDown.selectedIndex].value;
        document.getElementById("units").length = 0;
        
    function getUnits() {
        if (str !== ""){
        fetch(`/api/properties/${str}/units`)
                .then(response => response.json())
                .then(data => updateUnitsDropDown(data))
                .catch(error => console.error('Unable to get items.', error));     
      }
     }
         getUnits()
     function updateUnitsDropDown(data){
        document.getElementById("units").add(new Option("", ""))   
        data.forEach(d=> {
        document.getElementById("units").add(new Option(d.unitNo, d.unitId))    
        });

     }
        });
    
       
      document.getElementById("units").addEventListener("change", function() {
        unitId = unitsDropDown.options[unitsDropDown.selectedIndex].value;
        console.log(unitId)
        if (unitId === "" && document.getElementById("IdPhoto").src === "" || document.getElementById("leasePhoto").src === ""){
          document.getElementById("update-profile-button").classList.add("disabled")
        } else{
          document.getElementById("update-profile-button").classList.remove("disabled")       
        }
        });


    </script>
    
    
}

@section Scripts {
    <partial name="_ValidationScriptsPartial"/>
}